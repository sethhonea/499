Id,Name,Type,StartDate,StartTimeSpecified,EndDate,EndTimeSpecified,Location,RegistrationEnabled,HasEnabledRegistrationTypes,AccessLevel,Tags
5034552,Test Event,Rsvp,2022-12-01T10:00:00+01:00,True,2022-12-02T15:00:00+01:00,True,Paris,True,True,AdminOnly,[]
5034554,Test Event 2,Rsvp,2022-12-01T10:00:00+01:00,True,2022-12-02T15:00:00+01:00,True,Paris,True,True,AdminOnly,[]
5034555,Test Event 3,Rsvp,2022-12-01T10:00:00+01:00,True,2022-12-02T15:00:00+01:00,True,Paris,True,True,AdminOnly,[]
4985839,Test Event for API :),Rsvp,2022-12-01T00:00:00+01:00,False,2022-12-25T00:00:00+01:00,False,Rocket City,True,True,Restricted,[]
5019746,Created From BackEnd,Rsvp,2022-11-19T18:00:00+01:00,True,2022-11-21T04:00:00+01:00,True,Hawaii,True,True,Restricted,[]
5034558,DDD Draft Document Upload Test,Regular,2022-11-07T01:00:00+01:00,False,2022-11-08T01:00:00+01:00,False,Test Upload,True,False,AdminOnly,"['the american women’s group in paris was first organized in 1921. the purposes are to assist american women living or visiting in france, to foster good connections between american women and women from nations allied with the united states during world war i, to provide a center for social and educational activity, and to promote american charity. it has become an essential component of american life in paris. (cathy farnams 2019)', ""for this project, all past and current member contact, activity, financial and charitable data are maintained in the database. no documentation currently exists for the database. the project's duties include reverse engineering application documentation, offering new database functionality, prototyping user interface modifications, and compiling national data privacy requirements applicable to the geographical location of the program's users and their data."", '1.2 scope, approach, and methods', ""the software should allow users to import and export member, event, and financial data. wild apricot is used to build the user interface. menus, buttons, links, photos, and text will all be present. authorized applications can use wild apricot's api to access their database. users can make blog posts that are viewable in public and private domains."", 'the backend team selected python to interact with wildapricot’s api. python will be used to connect to the database and interact with it using queries. drawsql will be used to create any entity relationship diagram about this project. github will be used to collaborate code with a common repository among backend group members.', '1.3 system overview', ""wild apricot is a commercial off-the-shelf database tool used for membership management. all parts of the website are stored in the database, such as web pages, gui, and system files in addition to member information. for this project, the database has been divided into system data and working data. wild apricot's database can be accessed by their api through an authorized application."", '2 system overview', '2.1 system information', 'wildapricot is a commercial off-the-shelf cloud-based membership management system. the database holds all information about the website including web pages, gui, system files, event information, and membership information. the data within the database can be divided into two categories: working data and system data. the working data consists of the member, event, and financial data. the system data is all of the system files for the website. the database can be accessed using their api through an authorized application.', '2.1.1 database management system configuration', 'at this time it is unknown what type of database is being used by wildapricot. there is limited documentation available and it is not stated what type of database wildapricot selected for their application.', '2.1.2 database software utilities', 'wildapricot provides two apis to interact with the database. the member api allows users to create applications for members while the admin api allows administrators to retrieve and update data stored within the database. this project will use the admin api as this project is focused on exporting and importing data. python was selected to interact with the api to create scripts for exporting and importing data.', '3 database design decisions', '3.1 assumptions', 'it is assumed that the cloned database being used for this project is representative of the actual database that contains real-world information. the cloned database holds significantly less information so this assumption may have negative implications for this project.', '3.2 issues', 'the critical issues for this project are working with a cloned database and the lack of documentation. the cloned database may not be representative of actual data and this could lead to issues, such as performance and scaling. the lack of documentation is also a problem because nothing is known about the design of the database. without knowing the design, it will be difficult to predict what data is accessible and how it is stored.', '3.3 constraints', 'the main constraints for this project are being limited by wildapricot’s capabilities as well as by the lack of documentation. without the documentation, it is hard to know the full capabilities of wildapricot. wildapricot does have an application programming interface (api) to interact with the database, however, the team is limited to only using api-provided function calls to access the database. the api does not provide any calls to access system files and therefore system data is not retrievable. time is also a contributing factor as this team and this project are constrained by the length of the semester.', '4 database administrative functions', '4.1 schema information', 'the erd shown below is the working data that the team can currently access with the api.', '5 data access', '5.1 role definitions', 'wildapricot supplies various access roles for members. an account administrator may be granted full access or have read-only access. full-access administrators can delete other administrators and even the entire website. read-only administrators can view everything in the administrator backend without being able to make any changes. limited administrators have specific privileges that are relevant to their role. there are several types of limited administrators including membership managers, event managers, donations managers, newsletter managers, online store managers, and website editors. administrators can also have their access revoked. regular members do not have administrative privileges but can access some parts of the database to retrieve information.', '5.2 users', 'a public user does not have an account and also does not have access to the database. a member has access to an account with restricted access to the database. an administrator is a member account user with special administrative privileges. there are various types of administrators as listed above.', '6 non-functional design', '6.1 security design', 'administrative users are granted access to all member, event, and financial data but do not have access to system files. this is likely done for security purposes.', '6.2 availability', 'the available data that can be accessed is limited to the provided api calls. wildapircot’s api does not provide any calls for accessing system files. the most readily available data to manipulate is member, event, donation, and invoice data. however, donations can not be imported into the database as the api does not provide a ‘post’ method.', '6.3 backups and recovery', 'the website currently has limited export and import capabilities concerning the database. there is a limited amount of information available to export, thus there is limited information available to backup. this project will expand on the information available to export and import so that a more complete backup is possible. adding this functionality will help in recovery efforts.', '6.4 archiving', 'the website, based on our research and observations, denotes archived data as any data that is old such as past members or events. this archived field is a boolean field that is set to true for any data that is to be archived.']"
4997464,CS Party,Rsvp,2022-11-01T10:00:00+01:00,True,2022-11-02T15:00:00+01:00,True,Paris,True,False,Public,['computer science']
